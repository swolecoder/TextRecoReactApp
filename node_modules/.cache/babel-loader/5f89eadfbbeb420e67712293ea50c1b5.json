{"ast":null,"code":"var _jsxFileName = \"/Users/aranjan/Desktop/WorkProject/TextRecoReactApp/src/ReactUploadImage.js\";\nimport React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport \"react-json-pretty/themes/monikai.css\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nconst axios = require(\"axios\");\n\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: [],\n      display: false,\n      classificationData: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    //https://techrecobackend.herokuapp.com/text  || http://localhost:3000/text\n    axios.get(\"http://localhost:3000/text\").then(res => {\n      console.log(res.data);\n      let d = res.data.filter(e => {\n        delete e[\"_id\"];\n        delete e[\"__v\"];\n        return e;\n      });\n      let length = 0;\n      let displayData = \"\";\n      let classification = [];\n      let e = d.forEach(e => {\n        if (e[\"image\"].length > length) {\n          displayData = \"\";\n          length = e[\"image\"].length;\n          displayData = e[\"image\"];\n          classification = [];\n          classification = e[\"classification\"];\n        }\n      });\n      this.setState({\n        display: true\n      });\n      this.setState({\n        classificationData: classification\n      });\n      return this.setState({\n        data: displayData\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {});\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }; //https://techrecobackend.herokuapp.com/text/upload\n\n    axios.post(\"http://localhost:3000/text/upload\", formData, config).then(response => {\n      alert(\"The file is successfully uploaded\");\n    }).catch(error => {});\n  }\n\n  onChange(e) {\n    this.setState({\n      data: \"\"\n    });\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    var documents = [{\n      classification: \"NaturalReader\",\n      content: '\"Listen to PDF, Books,\\\\nand Webpages.\\\\nNaturalReader\\\\n\"'\n    }, {\n      classification: \"ALBERT EINSTEIN\",\n      content: '\"LIFE IS LIKE RIDING A\\\\nBICYCLE. TO KEEP YOUR\\\\nBALANCE YOU MUST\\\\nKEEP MOVING.\\\\nALBERT EINSTEIN\\\\n\"'\n    }, {\n      classification: \"area-filling\",\n      content: '\"I am curious about\\\\narea-filling text\\\\nrendering options\\\\n\"'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"File Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Upload\")), this.state.data.length < 1 ? React.createElement(\"div\", {\n      style: {\n        paddingTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingTop: \"100px\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Text-Recognition\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), this.state.display && JSON.stringify(this.state.data)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.classificationData.length > 0 && \"Classification Data\"), this.state.classificationData.length > 0 && React.createElement(JSONPretty, {\n      id: \"json-pretty\",\n      theme: JSONPrettyMon,\n      style: {\n        fontSize: \"1.1em\"\n      },\n      data: this.state.classificationData,\n      mainStyle: \"padding:1em\",\n      valueStyle: \"font-size:1.5em\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ReactUploadImage;","map":{"version":3,"sources":["/Users/aranjan/Desktop/WorkProject/TextRecoReactApp/src/ReactUploadImage.js"],"names":["React","JSONPretty","Skeleton","SkeletonTheme","axios","require","JSONPrettyMon","ReactUploadImage","Component","constructor","props","state","file","data","display","classificationData","onFormSubmit","bind","onChange","componentWillUpdate","get","then","res","console","log","d","filter","e","length","displayData","classification","forEach","setState","catch","error","finally","preventDefault","formData","FormData","append","config","headers","post","response","alert","target","files","render","documents","content","paddingTop","flexDirection","alignItems","JSON","stringify","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport \"react-json-pretty/themes/monikai.css\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nconst axios = require(\"axios\");\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: [],\n      display: false,\n      classificationData: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    //https://techrecobackend.herokuapp.com/text  || http://localhost:3000/text\n    axios\n      .get(\"http://localhost:3000/text\")\n\n      .then(res => {\n        console.log(res.data);\n        let d = res.data.filter(e => {\n          delete e[\"_id\"];\n          delete e[\"__v\"];\n          return e;\n        });\n\n        let length = 0;\n        let displayData = \"\";\n        let classification = [];\n        let e = d.forEach(e => {\n          if (e[\"image\"].length > length) {\n            displayData = \"\";\n            length = e[\"image\"].length;\n            displayData = e[\"image\"];\n            classification = [];\n            classification = e[\"classification\"];\n          }\n        });\n        this.setState({ display: true });\n        this.setState({ classificationData: classification });\n        return this.setState({ data: displayData });\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n      .finally(function() {});\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    //https://techrecobackend.herokuapp.com/text/upload\n    axios\n      .post(\"http://localhost:3000/text/upload\", formData, config)\n      .then(response => {\n        alert(\"The file is successfully uploaded\");\n      })\n      .catch(error => {});\n  }\n\n  onChange(e) {\n    this.setState({ data: \"\" });\n    this.setState({ file: e.target.files[0] });\n  }\n\n  render() {\n    var documents = [\n      {\n        classification: \"NaturalReader\",\n        content: '\"Listen to PDF, Books,\\\\nand Webpages.\\\\nNaturalReader\\\\n\"'\n      },\n      {\n        classification: \"ALBERT EINSTEIN\",\n        content:\n          '\"LIFE IS LIKE RIDING A\\\\nBICYCLE. TO KEEP YOUR\\\\nBALANCE YOU MUST\\\\nKEEP MOVING.\\\\nALBERT EINSTEIN\\\\n\"'\n      },\n      {\n        classification: \"area-filling\",\n        content:\n          '\"I am curious about\\\\narea-filling text\\\\nrendering options\\\\n\"'\n      }\n    ];\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <h1>File Upload</h1>\n          <input type=\"file\" name=\"myImage\" onChange={this.onChange} />\n          <button type=\"submit\">Upload</button>\n        </form>\n    \n        {this.state.data.length < 1 ? (\n          <div style={{ paddingTop: \"50px\" }}></div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              paddingTop: \"100px\",\n              alignItems: \"center\"\n            }}\n          >\n            <h1>Text-Recognition</h1>\n            <br />\n            {this.state.display && JSON.stringify(this.state.data)}\n          </div>\n        )}\n\n        <div>\n          <h1>\n            {this.state.classificationData.length > 0 && \"Classification Data\"}\n          </h1>\n          {this.state.classificationData.length > 0 && (\n            <JSONPretty\n              id=\"json-pretty\"\n              theme={JSONPrettyMon}\n              style={{ fontSize: \"1.1em\" }}\n              data={this.state.classificationData}\n              mainStyle=\"padding:1em\"\n              valueStyle=\"font-size:1.5em\"\n            ></JSONPretty>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactUploadImage;\n"]},"metadata":{},"sourceType":"module"}
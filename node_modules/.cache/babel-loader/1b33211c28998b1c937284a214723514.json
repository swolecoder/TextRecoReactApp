{"ast":null,"code":"var _jsxFileName = \"/Users/aranjan/Desktop/WorkProject/TextRecoReactApp/src/ReactUploadImage.js\";\nimport React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nconst axios = require(\"axios\");\n\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: [],\n      display: false,\n      classificationData: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    //https://techrecobackend.herokuapp.com/text  || http://localhost:3000/text\n    axios.get(\"http://localhost:3000/text\").then(res => {\n      console.log(res.data);\n      let d = res.data.filter(e => {\n        delete e[\"_id\"];\n        delete e[\"__v\"];\n        return e;\n      });\n      this.setState({\n        classificationData: res.data\n      });\n      let length = 0;\n      let displayData = \"\";\n      let classification = [];\n      let e = d.forEach(e => {\n        if (e[\"image\"].length > length) {\n          displayData = \"\";\n          length = e[\"image\"].length;\n          displayData = e[\"image\"];\n        }\n      });\n      this.setState({\n        display: true\n      });\n      return this.setState({\n        data: displayData\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {// always executed\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }; //https://techrecobackend.herokuapp.com/text/upload\n\n    axios.post(\"http://localhost:3000/text/upload\", formData, config).then(response => {\n      alert(\"The file is successfully uploaded\");\n    }).catch(error => {});\n  }\n\n  onChange(e) {\n    this.setState({\n      data: \"\"\n    });\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"File Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Upload\")), this.state.data.length < 1 ? React.createElement(\"div\", {\n      style: {\n        paddingTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingTop: \"100px\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Text-Recognition\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.display && JSON.stringify(this.state.data)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Stuff\"), JSON.stringify(this.state.classificationData)));\n  }\n\n}\n\nexport default ReactUploadImage;","map":{"version":3,"sources":["/Users/aranjan/Desktop/WorkProject/TextRecoReactApp/src/ReactUploadImage.js"],"names":["React","JSONPretty","Skeleton","SkeletonTheme","axios","require","JSONPrettyMon","ReactUploadImage","Component","constructor","props","state","file","data","display","classificationData","onFormSubmit","bind","onChange","componentWillUpdate","get","then","res","console","log","d","filter","e","setState","length","displayData","classification","forEach","catch","error","finally","preventDefault","formData","FormData","append","config","headers","post","response","alert","target","files","render","paddingTop","flexDirection","alignItems","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nconst axios = require(\"axios\");\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: [],\n      display: false,\n      classificationData: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    //https://techrecobackend.herokuapp.com/text  || http://localhost:3000/text\n    axios\n      .get(\"http://localhost:3000/text\")\n\n      .then(res => {\n        console.log(res.data);\n        let d = res.data.filter(e => {\n          delete e[\"_id\"];\n          delete e[\"__v\"];\n          return e;\n        });\n        this.setState({ classificationData: res.data });\n        let length = 0;\n        let displayData = \"\";\n        let classification = [];\n        let e = d.forEach(e => {\n          if (e[\"image\"].length > length) {\n            displayData = \"\";\n            length = e[\"image\"].length;\n            displayData = e[\"image\"];\n          }\n        });\n        this.setState({ display: true });\n        return this.setState({ data: displayData });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    //https://techrecobackend.herokuapp.com/text/upload\n    axios\n      .post(\"http://localhost:3000/text/upload\", formData, config)\n      .then(response => {\n        alert(\"The file is successfully uploaded\");\n      })\n      .catch(error => {});\n  }\n\n  onChange(e) {\n    this.setState({ data: \"\" });\n    this.setState({ file: e.target.files[0] });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <h1>File Upload</h1>\n          <input type=\"file\" name=\"myImage\" onChange={this.onChange} />\n          <button type=\"submit\">Upload</button>\n        </form>\n\n        {this.state.data.length < 1 ? (\n          <div style={{ paddingTop: \"50px\" }}></div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              paddingTop: \"100px\",\n              alignItems: \"center\"\n            }}\n          >\n            <h1>Text-Recognition</h1>\n            <br />\n            {this.state.display && JSON.stringify(this.state.data)}\n          </div>\n        )}\n\n        <div>\n          <h1>Stuff</h1>\n          {JSON.stringify(this.state.classificationData)}\n          {/* {<JSONPretty themeClassName=\"custom-json-pretty\" data={this.state.classificationData}></JSONPretty>} */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactUploadImage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aranjan/Desktop/sidePrjects/frontend/my-app/src/ReactUploadImage.js\";\nimport React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nconst axios = require(\"axios\");\n\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    axios.get(\"http://localhost:3000/text\").then(res => {\n      let d = res.data.filter(e => {\n        delete e[\"_id\"];\n        delete e[\"__v\"];\n        return e;\n      });\n      let length = 0;\n      let displayData = \"\";\n      let e = d.forEach(e => {\n        if (e[\"image\"].length > length) {\n          displayData = \"\";\n          length = e[\"image\"].length;\n          displayData = e[\"image\"];\n        }\n      });\n      let m = displayData.replace(/\\n/g, '');\n      return this.setState({\n        data: displayData\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {// always executed\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(\"http://localhost:3000/text/upload\", formData, config).then(response => {\n      alert(\"The file is successfully uploaded\");\n    }).catch(error => {});\n    axios.get(\"http://localhost:3000/text\").then(res => this.setState({\n      data: res.data\n    })).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {// always executed\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"File Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Upload\")), this.state.data.length < 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Upload Data Again\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingTop: \"100px\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Text Reco\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), this.state.data));\n  }\n\n}\n\nexport default ReactUploadImage;","map":{"version":3,"sources":["/Users/aranjan/Desktop/sidePrjects/frontend/my-app/src/ReactUploadImage.js"],"names":["React","JSONPretty","Skeleton","SkeletonTheme","axios","require","JSONPrettyMon","ReactUploadImage","Component","constructor","props","state","file","data","onFormSubmit","bind","onChange","componentWillUpdate","get","then","res","d","filter","e","length","displayData","forEach","m","replace","setState","catch","error","console","log","finally","preventDefault","formData","FormData","append","config","headers","post","response","alert","target","files","render","display","flexDirection","paddingTop","alignItems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nconst axios = require(\"axios\");\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    axios\n      .get(\"http://localhost:3000/text\")\n\n      .then(res => {\n        let d = res.data.filter(e => {\n          delete e[\"_id\"];\n          delete e[\"__v\"];\n          return e;\n        });\n        let length = 0;\n        let displayData = \"\";\n        let e = d.forEach(e => {\n          if (e[\"image\"].length > length) {\n            displayData = \"\";\n            length = e[\"image\"].length;\n            displayData = e[\"image\"];\n          }\n        });\n        let m = displayData.replace(/\\n/g, '');\n        return this.setState({ data: displayData });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios\n      .post(\"http://localhost:3000/text/upload\", formData, config)\n      .then(response => {\n        alert(\"The file is successfully uploaded\");\n      })\n      .catch(error => {});\n    axios\n      .get(\"http://localhost:3000/text\")\n      .then(res => this.setState({ data: res.data }))\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  }\n\n  onChange(e) {\n    this.setState({ file: e.target.files[0] });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <h1>File Upload</h1>\n          <input type=\"file\" name=\"myImage\" onChange={this.onChange} />\n          <button type=\"submit\">Upload</button>\n        </form>\n        {/* Data: {this.state.data.length > 0 && this.state.data.map(d=> JSON.stringify(d.image))} */}\n        {this.state.data.length < 1 ? (\n          <div>Upload Data Again</div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              paddingTop: \"100px\",\n              alignItems: \"center\"\n            }}\n          >\n            <h1>Text Reco</h1>\n            <br />\n            {this.state.data}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ReactUploadImage;\n"]},"metadata":{},"sourceType":"module"}
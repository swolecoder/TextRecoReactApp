{"ast":null,"code":"var _jsxFileName = \"/Users/aranjan/Desktop/sidePrjects/frontend/my-app/src/ReactUploadImage.js\";\nimport React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nconst axios = require(\"axios\");\n\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    axios.get(\"http://localhost:3000/text\").then(res => {\n      let d = res.data.filter(e => {\n        delete e[\"_id\"];\n        delete e[\"__v\"];\n        return e;\n      });\n      return this.setState({\n        data: d\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {// always executed\n    });\n    let length = 0;\n    let displayData = \"\";\n    let e = this.state.data.forEach(e => {\n      // console.log(\"Ra\", e[\"image\"].length)\n      if (e[\"image\"].length > length) {\n        displayData = e[\"image\"];\n      }\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(\"http://localhost:3000/text/upload\", formData, config).then(response => {\n      alert(\"The file is successfully uploaded\");\n    }).catch(error => {});\n    axios.get(\"http://localhost:3000/text\").then(res => this.setState({\n      data: res.data\n    })).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {// always executed\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"File Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Upload\")), this.state.data.length < 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Upload Data Again\") : React.createElement(JSONPretty, {\n      themeClassName: \"custom-json-pretty\",\n      id: \"json-pretty\",\n      theme: JSONPrettyMon,\n      data: JSON.stringify(this.state.data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ReactUploadImage;","map":{"version":3,"sources":["/Users/aranjan/Desktop/sidePrjects/frontend/my-app/src/ReactUploadImage.js"],"names":["React","JSONPretty","Skeleton","SkeletonTheme","axios","require","JSONPrettyMon","ReactUploadImage","Component","constructor","props","state","file","data","onFormSubmit","bind","onChange","componentWillUpdate","get","then","res","d","filter","e","setState","catch","error","console","log","finally","length","displayData","forEach","preventDefault","formData","FormData","append","config","headers","post","response","alert","target","files","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nconst axios = require(\"axios\");\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nclass ReactUploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      data: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    axios\n      .get(\"http://localhost:3000/text\")\n\n      .then(res => {\n\n        let d = res.data.filter((e)=> {\n         delete e[\"_id\"]\n         delete e[\"__v\"];\n        return e;\n        })\n        return this.setState({ data: d });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n\n      let length =0;\n      let displayData = \"\"\n      let e = this.state.data.forEach((e)=>{\n        // console.log(\"Ra\", e[\"image\"].length)\n        if(e[\"image\"].length > length){\n          displayData = e[\"image\"]\n        }\n      })\n\n     \n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios\n      .post(\"http://localhost:3000/text/upload\", formData, config)\n      .then(response => {\n        alert(\"The file is successfully uploaded\");\n      })\n      .catch(error => {});\n    axios\n      .get(\"http://localhost:3000/text\")\n      .then(res => this.setState({ data: res.data }))\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  }\n\n  onChange(e) {\n    this.setState({ file: e.target.files[0] });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <h1>File Upload</h1>\n          <input type=\"file\" name=\"myImage\" onChange={this.onChange} />\n          <button type=\"submit\">Upload</button>\n        </form>\n        {/* Data: {this.state.data.length > 0 && this.state.data.map(d=> JSON.stringify(d.image))} */}\n        {this.state.data.length < 1 ? (\n          <div>\n \n           Upload Data Again\n          </div>\n        ) : (\n          <JSONPretty\n            themeClassName=\"custom-json-pretty\"\n            id=\"json-pretty\"\n            theme={JSONPrettyMon}\n            data={JSON.stringify(this.state.data)}\n          ></JSONPretty>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ReactUploadImage;\n"]},"metadata":{},"sourceType":"module"}